# SPDX-FileCopyrightText:  PyPSA-Earth and PyPSA-Eur Authors
#
# SPDX-License-Identifier: CC0-1.0

version: 0.7.0
tutorial: false

logging:
  level: INFO
  format: "%(levelname)s:%(name)s:%(message)s"

results_dir: results/
summary_dir: results/

foresight: overnight

countries: ["NG", "BJ"]
# Can be replaced by country ["NG", "BJ"], continent ["Africa"] or user-specific region, see more at https://pypsa-earth.readthedocs.io/en/latest/configuration.html#top-level-configuration

enable:
  retrieve_databundle: true #  Recommended 'true', for the first run. Otherwise data might be missing.
  retrieve_databundle_sector: true
  retrieve_cost_data: true # true: retrieves cost data from technology data and saves in resources/costs.csv, false: uses cost data in data/costs.csv
  download_osm_data: true # If 'true', OpenStreetMap data will be downloaded for the above given countries
  build_natura_raster: false # If True, then an exclusion raster will be build
  build_cutout: false
  # If "build_cutout" : true, then environmental data is extracted according to `snapshots` date range and `countries`
  # requires cds API key https://cds.climate.copernicus.eu/api-how-to
  # More information https://atlite.readthedocs.io/en/latest/introduction.html#datasets
  progress_bar: true # show progress bar during downloading routines and other long-running tasks

custom_rules: [] # Default empty [] or link to custom rule file e.g. ["my_folder/my_rules.smk"] that add rules to Snakefile

run:
  name: "" # use this to keep track of runs with different settings
  sector_name: "" # use this to keep track of sector scenario runs
  shared_cutouts: true # set to true to share the default cutout(s) across runs
  # Note: value false requires build_cutout to be enabled
  allow_scenario_failure: false # If True, the workflow will continue even if a scenario in run_scnenario fails

scenario:
  simpl: [""]
  ll: ["copt"]
  clusters: [10]
  opts: [Co2L-3h]
  planning_horizons: # investment years for myopic and perfect; or costs year for overnight
  - 2030
  sopts:
  - "144h"
  demand:
  - "AB"

snapshots:
  start: "2013-01-01"
  end: "2014-01-01"
  inclusive: "left" # end is not inclusive

augmented_line_connection:
  add_to_snakefile: false # If True, includes this rule to the workflow

cluster_options:
  simplify_network:
    remove_stubs: true
    remove_stubs_across_borders: false
    p_threshold_drop_isolated: 20 # [MW] isolated buses are being discarded if bus mean power is below the specified threshold
    p_threshold_merge_isolated: 300 # [MW] isolated buses are being merged into a single isolated bus if a bus mean power is below the specified threshold
    s_threshold_fetch_isolated: false # [-] a share of the national load for merging an isolated network into a backbone network
  alternative_clustering: false # "False" use Voronoi shapes, "True" use GADM shapes

build_shape_options:
  gadm_layer_id: 1 # GADM level area used for the gadm_shapes. Codes are country-dependent but roughly: 0: country, 1: region/county-like, 2: municipality-like
  simplify_gadm: true # When true, shape polygons are simplified else no
  year: 2020 # reference year used to derive shapes, info on population and info on GDP
  worldpop_method: "standard" # "standard" pulls from web 1kmx1km raster, "api" pulls from API 100mx100m raster,
  # false (not "false") no pop addition to shape which is useful when generating only cutout
  gdp_method: "standard" # "standard" pulls from web 1x1km raster, false (not "false") no gdp addition to shape which useful when generating only cutout

subregion:
  define_by_gadm: false # name of the subregion. Multiple countries can be part in the same subregion.
  path_custom_shapes: false # (optional) provide the specific absolute path of the custom file e.g. (...\data\custom_shapes.geojson)

clean_osm_data_options: # osm = OpenStreetMap
  threshold_voltage: 51000 # [V] minimum voltage threshold to keep the asset (cable, line, generator, etc.) [V]

build_osm_network: # Options of the build_osm_network script; osm = OpenStreetMap
  group_tolerance_buses: 5000 # [m] (default 5000) Tolerance in meters of the close buses to merge
  force_ac: false # When true, it forces all components (lines and substation) to be AC-only. To be used if DC assets create problem.

base_network:
  min_voltage_substation_offshore: 51000 # [V] minimum voltage of the offshore substations
  min_voltage_rebase_voltage: 51000 # [V] minimum voltage in base network

load_options:
  ssp: "ssp2-2.6" # shared socio-economic pathway (GDP and population growth) scenario to consider
  weather_year: 2013 # Load scenarios available with different weather year (different renewable potentials)
  prediction_year: 2030 # Load scenarios available with different prediction year (GDP, population)
  scale: 1 # scales all load time-series, i.e. 2 = doubles load

electricity:
  base_voltage: 380.
  voltages: [132., 220., 300., 380., 500., 750.]
  co2limit: 7.75e+7 # European default, 0.05 * 3.1e9*0.5, needs to be adjusted for Africa
  co2base: 1.487e+9 # European default, adjustment to Africa necessary
  agg_p_nom_limits: data/agg_p_nom_minmax.csv
  hvdc_as_lines: false # should HVDC lines be modeled as `Line` or as `Link` component?
  automatic_emission: false
  automatic_emission_base_year: 1990 # 1990 is taken as default. Any year from 1970 to 2018 can be selected.

  operational_reserve: # like https://genxproject.github.io/GenX/dev/core/#Reserves
    activate: false

  max_hours:
    battery: 6
    H2: 168

  extendable_carriers:
    Generator: [solar, onwind, offwind-ac, offwind-dc, OCGT]
    StorageUnit: [] # battery, H2
    Store: [battery, H2]
    Link: [] # H2 pipeline

  powerplants_filter: (DateOut >= 2022 or DateOut != DateOut)
  custom_powerplants: false #  "false" use only powerplantmatching (ppm) data, "merge" combines ppm and custom powerplants, "replace" use only custom powerplants

  conventional_carriers: [nuclear, oil, OCGT, CCGT, coal, lignite, geothermal, biomass]
  renewable_carriers: [solar, onwind, offwind-ac, offwind-dc, hydro]

  estimate_renewable_capacities:
    stats: "irena" # False, = greenfield expansion, 'irena' uses IRENA stats to add expansion limits
    year: 2023 # Reference year, available years for IRENA stats are 2000 to 2023
    p_nom_min: 1 # any float, scales the minimum expansion acquired from stats, i.e. 110% of <years>'s capacities => p_nom_min: 1.1
    p_nom_max: false # sets the expansion constraint, False to deactivate this option and use estimated renewable potentials determine by the workflow, float scales the p_nom_min factor accordingly

lines:
  length_factor: 1.25
  under_construction: "zero" # 'zero': set capacity to zero, 'remove': remove, 'keep': with full capacity

links:
  under_construction: "zero" # 'zero': set capacity to zero, 'remove': remove, 'keep': with full capacity

atlite:
  nprocesses: 4
  cutouts:
    cutout-2013-era5:
      module: era5
      dx: 0.3 # cutout resolution
      dy: 0.3 # cutout resolution
      # The cutout time is automatically set by the snapshot range. See `snapshot:` option above and 'build_cutout.py'.
      # time: ["2013-01-01", "2014-01-01"]  # to manually specify a different weather year (~70 years available)
      # The cutout spatial extent [x,y] is automatically set by country selection. See `countires:` option above and 'build_cutout.py'.
      # x: [-12., 35.]  # set cutout range manual, instead of automatic by boundaries of country
      # y: [33., 72]    # manual set cutout range

renewable:
  onwind:
    cutout: cutout-2013-era5
    capacity_per_sqkm: 3 # conservative, ScholzPhd Tab 4.3.1: 10MW/km^2
  offwind-ac:
    cutout: cutout-2013-era5
    capacity_per_sqkm: 2
  offwind-dc:
    cutout: cutout-2013-era5
    # ScholzPhd Tab 4.3.1: 10MW/km^2
    capacity_per_sqkm: 3
  solar:
    cutout: cutout-2013-era5
    capacity_per_sqkm: 4.6 # From 1.7 to 4.6 addresses issue #361
    # Determined by comparing uncorrected area-weighted full-load hours to those
    # published in Supplementary Data to
    # Pietzcker, Robert Carl, et al. "Using the sun to decarbonize the power
    # sector: The economic potential of photovoltaics and concentrating solar
    # power." Applied Energy 135 (2014): 704-720.
    correction_factor: 0.854337
  hydro:
    cutout: cutout-2013-era5
    hydrobasins_level: 6
    resource:
      hydrobasins: data/hydrobasins/hybas_world.shp
    carriers: [ror, PHS, hydro]
    PHS_max_hours: 6
    hydro_max_hours_default: 6.0 # (optional, default 6) Default value of max_hours for hydro when NaN values are found
  csp:
    cutout: cutout-2013-era5
    capacity_per_sqkm: 2.392 # From 1.7 to 4.6 addresses issue #361

# TODO: Needs to be adjusted for Africa.
# Costs Configuration
costs:
  year: 2030
  technology_data_version: v0.13.2
  discountrate: [0.071] #, 0.086, 0.111]
  country_specific_data: "" # (optional) Reference to the desired technology-data directory for techno-economic input data; Only "" and "US" supported, for other values check the technology-data output directory
  # Only needed if "US" is selected as `country_specific_data`, otherwise ignore
  cost_scenario: "moderate" # only used if `country_specific_data: "US"`; can be "moderate", "advanced" or "conservative"
  financial_case: "market" # only used if `country_specific_data: "US"`; can be "market" or "r&d"

monte_carlo:
  options:
    add_to_snakefile: false # When set to true, enables Monte Carlo sampling

# ------------------- SECTOR OPTIONS -------------------

export:
  endogenous: false # If true, the export demand is endogenously determined by the model
  endogenous_price: 400 # EUR/MWh # Market price, for wich the hydrogen for endogenous exports is sold. Only considered, if ["export"]["endogenous"] is set to true.
  store: true # [True, False] # specifies whether an export store to balance demand is implemented
  store_capital_costs: "no_costs" # ["standard_costs", "no_costs"] # specifies the costs of the export store. "standard_costs" takes CAPEX of "hydrogen storage tank type 1 including compressor"
  h2export: [10] # Yearly export demand in TWh. Only considered, if ["export"]["endogenous"] is set to false
  export_profile: "ship" # use "ship" or "constant". Only considered, if ["export"]["endogenous"] is set to false

sector:
  district_heating:
    potential: 0.3 #maximum fraction of urban demand which can be supplied by district heating
    progress: 1
    district_heating_loss: 0.15
  reduce_space_heat_exogenously: true # reduces space heat demand by a given factor (applied before losses in DH)
  reduce_space_heat_exogenously_factor: 0.29 # per unit reduction in space heat demand

  boilers: true
  oil_boilers: false
  chp: true
  micro_chp: false
  solar_thermal: true

  v2g: true #allows feed-in to grid from EV battery
  bev_dsm: true #turns on EV battery
  bev_energy: 0.05 #average battery size in MWh
  bev_availability: 0.5 #How many cars do smart charging

  biomass_transport: true # biomass transport between nodes
  biomass_transport_default_cost: 0.1 #EUR/km/MWh
  solid_biomass_potential: 40 # TWh/a, Potential of whole modelled area
  biogas_potential: 0.5 # TWh/a, Potential of whole modelled area

  dynamic_transport:
    enable: false # If "True", then the BEV and FCEV shares are obtained depending on the "Co2L"-wildcard (e.g. "Co2L0.70: 0.10"). If "False", then the shares are obtained depending on the "demand" wildcard and "planning_horizons" wildcard as listed below (e.g. "DF_2050: 0.08")
    land_transport_electric_share:
      Co2L2.0: 0.00
      Co2L1.0: 0.01
      Co2L0.90: 0.03
      Co2L0.80: 0.06
      Co2L0.70: 0.10
      Co2L0.60: 0.17
      Co2L0.50: 0.27
      Co2L0.40: 0.40
      Co2L0.30: 0.55
      Co2L0.20: 0.69
      Co2L0.10: 0.80
      Co2L0.00: 0.88
    land_transport_fuel_cell_share:
      Co2L2.0: 0.01
      Co2L1.0: 0.01
      Co2L0.90: 0.01
      Co2L0.80: 0.01
      Co2L0.70: 0.01
      Co2L0.60: 0.01
      Co2L0.50: 0.01
      Co2L0.40: 0.01
      Co2L0.30: 0.01
      Co2L0.20: 0.01
      Co2L0.10: 0.01
      Co2L0.00: 0.01

  land_transport_fuel_cell_share: # 1 means all FCEVs HERE
    BU_2030: 0.00
    AP_2030: 0.004
    NZ_2030: 0.02
    DF_2030: 0.01
    AB_2030: 0.01
    BU_2050: 0.00
    AP_2050: 0.06
    NZ_2050: 0.28
    DF_2050: 0.08

  land_transport_electric_share: # 1 means all EVs  # This leads to problems when non-zero HERE
    BU_2030: 0.00
    AP_2030: 0.075
    NZ_2030: 0.13
    DF_2030: 0.01
    AB_2030: 0.01
    BU_2050: 0.00
    AP_2050: 0.42
    NZ_2050: 0.68
    DF_2050: 0.011

  hydrogen:
    network: true

  co2_network: true
  co2_sequestration_potential: 200 #MtCO2/a sequestration potential for Europe
  co2_sequestration_cost: 10 #EUR/tCO2 for sequestration of CO2
  shipping_hydrogen_liquefaction: false
  shipping_average_efficiency: 0.4 #For conversion of fuel oil to propulsion in 2011

  shipping_hydrogen_share: #1.0
    BU_2030: 0.00
    AP_2030: 0.00
    NZ_2030: 0.10
    DF_2030: 0.05
    AB_2030: 0.05
    BU_2050: 0.00
    AP_2050: 0.25
    NZ_2050: 0.36
    DF_2050: 0.12

  h2_cavern: true
  marginal_cost_storage: 0
  methanation: true
  helmeth: true
  dac: true
  cc_fraction: 0.9
  cc: true
  space_heat_share: 0.6 # the share of space heating from all heating. Remainder goes to water heating.
  airport_sizing_factor: 3

  min_part_load_fischer_tropsch: 0.9

solving:
  options:
    formulation: kirchhoff
    load_shedding: 100 # Set to "false" or willingness to pay in €/kWh, e.g. 100 €/kWh (intersect between macroeconomic and surveybased willingness to pay http://journal.frontiersin.org/article/10.3389/fenrg.2015.00055/full)
    noisy_costs: true
    min_iterations: 4
    max_iterations: 6
    clip_p_max_pu: 0.01
    skip_iterations: true
    track_iterations: false

  # See configs/config.solve.yaml to customise solver options
  solver:
    name: gurobi # Supported solvers: glpk, highs, cplex, cbc, copt
    options: gurobi-default # highs-default, cplex-default, copt-default

  mem: 30000 #memory in MB; 20 GB enough for 50+B+I+H2; 100 GB for 181+B+I+H2
