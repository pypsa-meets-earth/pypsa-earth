,Unit,Values,Description
**options**,,,
add_to_snakemake,,"true or false","Set to true to enable Monte-Carlo"
method,,"""global_sensitivity"" or ""single_best_in_worst""","""global_sensitivity"" create scenarios in latin hypercube space, or ""single_best_in_worst"" create scenarios where all values are pessimistic and only one is optimistic,,,
samples,,"int","Defines the number of total sample networks that will be optimized. If the chosen sampling strategy is scipy,  then a square of a prime number needs to be chosen. E.g. 49 which is (7^2)"
sampling_strategy,,"Any subset of {pydoe2, chaospy, scipy}","Current supported packages to create an experimental design"
seed,,"int","Allows experimentation to be reproduced easily"
**uncertainties**,,,
<any pypsa.object syntax>,MW/MWh,,"`Key` is a dynamic PyPSA object that allows to access any pypsa object such as `loads_t.p_set` or the max. wind generation per hour `generators_t.p_max_pu.loc[:, n.generators.carrier == ""wind""]`. `Values` or bounds are multiplication for each object."
type,,"str","Defines the distribution for the chosen pypsa.object parameter. Distribution can be either uniform, normal, lognormal, triangle, beta or gamma"
args,,"list","Defines parameters for the chosen distribution. [mean, std] for normal and lognormal, [lower_bound, upper_bound] for uniform, [mid_point (between 0 - 1)] for triangle, [alpha, beta] for beta, [shape, scale] for gamma"
